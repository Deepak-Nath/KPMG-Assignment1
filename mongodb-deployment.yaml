apiVersion: v1
kind: Namespace
metadata:
  name: dk-test-ns
---

apiVersion: v1
kind: Secret
metadata:
    name: mongodb-secret
type: Opaque
data:
    mongo-root-username: <????>
    mongo-root-password: <????>
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-configmap
data:
  database_url: mongodb-service
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-deployment
  namespace: dk-test-ns
  labels:
    app: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      tolerations:
        - key: "sku"
          operator: "Equal"
          value: "dkn-test-db"
          effect: "NoSchedule"
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - dkn-test-ws
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: mongodb
        image: mongo
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: mongo-root-username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom: 
            secretKeyRef:
              name: mongodb-secret
              key: mongo-root-password
        volumeMounts:
          - mountPath: "/var/lib/mongodb"
            name: mongo-db
            
  volumeClaimTemplates:
  - metadata:
      name: mongo-db
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: dkn-test-sc
      resources:
        requests:
          storage: 20
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
spec:
  selector:
    app: mongodb
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
